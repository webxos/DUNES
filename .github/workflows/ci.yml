```yaml
name: CI and Publish
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-and-lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install Node.js dependencies
        run: npm ci
      - name: Run ESLint
        run: npx eslint public/js/ --ext .js,.jsx,.ts,.tsx --fix
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install Python dependencies
        run: pip install flake8 modelcontextprotocol qiskit qiskit-aer sqlalchemy alembic httpx torch
      - name: Run Flake8
        run: flake8 server/ --max-line-length=120
      - name: Build
        run: npm run build
      - name: Test
        run: npm test
      - name: Notify on failure
        if: failure()
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: 'CI Failure'
          content-filepath: .github/ISSUE_TEMPLATE/ci-failure.md
          assignees: 'your-github-username'
          labels: 'bug, ci'
          token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    runs-on: ubuntu-latest
    needs: build-and-lint
    if: github.event_name == 'release' && github.event.action == 'published'
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/webxos/vial-mcp-server:latest
          platforms: linux/amd64
          build-args: |
            NASA_API_KEY=${{ secrets.NASA_API_KEY }}
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
```
